Loading from hoff  ../../examples/SMS_SPAM/data_pipeline/sms_pickle_L.pkl
batch size 100
num features 1024
num classes 2
num rules 16
1  ->  0
0  ->  1
None  ->  2
----------------------------
{1: 0, 0: 1, None: 2}
----------------------------
len_x 100
len_r 100
--------------------------
Working with l
--------------------------
Working with L
--------------------------
Loading from hoff  ../../examples/SMS_SPAM/data_pipeline/sms_pickle_U.pkl
batch size 5174
num features 1024
num classes 2
num rules 16
1  ->  0
0  ->  1
None  ->  2
----------------------------
{1: 0, 0: 1, None: 2}
----------------------------
len_x 5174
len_r 5174
--------------------------
Working with l
--------------------------
Working with L
L is empty
--------------------------
No valid label found for rule:  2
No valid label found for rule:  4
No valid label found for rule:  6
Rule classes:  [0, 0, 2, 1, 2, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0]
length of covered U: 2984
Size of d before oversampling:  100
Size of U (covered) :  2984
Size of d after oversampling:  1000
Size of d_U after combining:  3984
Loading 100 elements from d
num instances in d:  1000
Loading from hoff  ../../examples/SMS_SPAM/data_pipeline/sms_pickle_V.pkl
batch size 100
num features 1024
num classes 2
num rules 16
1  ->  0
0  ->  1
None  ->  2
----------------------------
{1: 0, 0: 1, None: 2}
----------------------------
len_x 100
len_r 100
--------------------------
Working with l
--------------------------
Working with L
--------------------------
Setting value of d to 0 for test data
test_w len:  64
test_w len:  64
Number of features:  1024
Number of classes:  2
Print num of rules to train:  16
Print num of rules:  16



[Errno 2] No such file or directory: './met_pickl/metrics_train_f_on_d.p'
Did not find prev best metric for run type f_d. Setting to zero.
Found prev best metric for run type f_d_U: 1.000
best metrics dict:  {'f1_score_1': 1.0, 'precision_1': 1.0, 'recall_1': 1.0, 'support_1': 89, 'f1_score': array([1.000, 1.000]), 'precision': array([1.000, 1.000]), 'recall': array([1.000, 1.000]), 'support': array([11, 89]), 'avg_f1_score': 1.0, 'avg_precision': 1.0, 'avg_recall': 1.0, 'accuracy': 1.0, 'epoch': 3.0, 'f_d_global_step': 372}
